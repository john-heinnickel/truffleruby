subject: "Rescue keyword"
description: "capturing / with a constant with lexical parent (A::B)"
yarp_specific: true
notes: >
  A constant capturing is represented with the following simplified AST:
  
    (WriteConstantNode name = ERROR
      (ReadConstantWithLexicalScopeNode lexicalScope =  :: Object, name = "Foo")
      (ReadGlobalVariableNodeGen name = $!
        (LookupGlobalVariableStorageNodeGen name = $!)))
  
  that is equivalent to:
  
  ```ruby
  Foo::ERROR = $!
  ```
focused_on_node: "org.truffleruby.language.exceptions.TryNode"
ruby: |
  begin
    "foo"
  rescue RuntimeError => Foo::ERROR
    42
  end
ast: |
  TryNodeGen
      attributes:
          canOmitBacktrace = false
          flags = 0
      children:
          rescueParts = [
              RescueClassesNode
                  attributes:
                      flags = 0
                  children:
                      handlingClassNodes = [
                          ReadConstantWithLexicalScopeNode
                              attributes:
                                  flags = 0
                                  lexicalScope =  :: Object
                                  name = "RuntimeError"
                              children:
                                  getConstantNode =
                                      GetConstantNodeGen
                                  lookupConstantNode =
                                      LookupConstantWithLexicalScopeNodeGen
                                          attributes:
                                              lexicalScope =  :: Object
                                              name = "RuntimeError"
                      ]
                      rescueBody =
                          SequenceNode
                              attributes:
                                  flags = 0
                              children:
                                  body = [
                                      AssignRescueVariableNode
                                          attributes:
                                              flags = 0
                                          children:
                                              rescueVariableNode =
                                                  WriteConstantNode
                                                      attributes:
                                                          flags = 0
                                                          name = "ERROR"
                                                      children:
                                                          moduleNode =
                                                              ReadConstantWithLexicalScopeNode
                                                                  attributes:
                                                                      flags = 0
                                                                      lexicalScope =  :: Object
                                                                      name = "Foo"
                                                                  children:
                                                                      getConstantNode =
                                                                          GetConstantNodeGen
                                                                      lookupConstantNode =
                                                                          LookupConstantWithLexicalScopeNodeGen
                                                                              attributes:
                                                                                  lexicalScope =  :: Object
                                                                                  name = "Foo"
                                                          valueNode =
                                                              DeadNode
                                                                  attributes:
                                                                      flags = 0
                                                                      reason = "YARPTranslator#visitConstantPathWriteNode"
                                      IntegerFixnumLiteralNode
                                          attributes:
                                              flags = 1
                                              value = 42
                                  ]
          ]
          tryPart =
              StringLiteralNode
                  attributes:
                      encoding = UTF-8
                      flags = 1
                      tstring = foo