subject: "Rescue keyword"
description: "capturing / with element reference"
notes: >
  Capturing exception to element reference is represented as a `a.[]=()` method call.
  
  A local variable is represented with the following simplified AST:
  
    (InlinedIndexSetNodeGen
      (ObjectLiteralNode object = :foo)         # operand 1
      (ReadGlobalVariableNodeGen name = $!)     # operand 2
      (RubyCallNode methodName = a              # receiver
        (SelfNode)))
  
  that is equivalent to:
  
  ```ruby
  a[:foo] = $!
  ```
focused_on_node: "org.truffleruby.language.exceptions.TryNode"
ruby: |
  begin
    "foo"
  rescue RuntimeError => a[:foo]
    42
  end
ast: |
  TryNodeGen
      attributes:
          canOmitBacktrace = false
          flags = 1
      children:
          rescueParts = [
              RescueClassesNode
                  attributes:
                      flags = 0
                  children:
                      handlingClassNodes = [
                          ReadConstantWithLexicalScopeNode
                              attributes:
                                  flags = 0
                                  lexicalScope =  :: Object
                                  name = "RuntimeError"
                              children:
                                  getConstantNode =
                                      GetConstantNodeGen
                                  lookupConstantNode =
                                      LookupConstantWithLexicalScopeNodeGen
                                          attributes:
                                              lexicalScope =  :: Object
                                              name = "RuntimeError"
                      ]
                      rescueBody =
                          SequenceNode
                              attributes:
                                  flags = 0
                              children:
                                  body = [
                                      InlinedIndexSetNodeGen
                                          attributes:
                                              assumptions = [Assumption(valid, name=set_trace_func is not used)]
                                              flags = 0
                                              parameters = org.truffleruby.language.dispatch.RubyCallNodeParameters@...
                                          children:
                                              operand1Node_ =
                                                  ObjectLiteralNode
                                                      attributes:
                                                          flags = 0
                                                          object = :foo
                                              operand2Node_ =
                                                  ReadGlobalVariableNodeGen
                                                      attributes:
                                                          flags = 0
                                                          name = "$!"
                                                      children:
                                                          lookupGlobalVariableStorageNode =
                                                              LookupGlobalVariableStorageNodeGen
                                                                  attributes:
                                                                      index = -1
                                                                      name = "$!"
                                              receiver_ =
                                                  RubyCallNode
                                                      attributes:
                                                          descriptor = org.truffleruby.language.arguments.EmptyArgumentsDescriptor@...
                                                          dispatchConfig = PRIVATE
                                                          emptyKeywordsProfile = false
                                                          flags = 0
                                                          isAttrAssign = false
                                                          isSafeNavigation = false
                                                          isSplatted = false
                                                          isVCall = true
                                                          lastArgIsNotHashProfile = false
                                                          methodName = "a"
                                                          notEmptyKeywordsProfile = false
                                                          notRuby2KeywordsHashProfile = false
                                                          ruby2KeywordsHashProfile = false
                                                      children:
                                                          receiver =
                                                              SelfNode
                                                                  attributes:
                                                                      flags = 0
                                      IntegerFixnumLiteralNode
                                          attributes:
                                              flags = 0
                                              value = 42
                                  ]
          ]
          tryPart =
              StringLiteralNode
                  attributes:
                      encoding = UTF-8
                      flags = 0
                      tstring = foo