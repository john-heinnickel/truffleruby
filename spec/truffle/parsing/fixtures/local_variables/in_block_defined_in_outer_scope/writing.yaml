subject: "Local variable"
description: "in a block but defined in an outer scope / assigning a local variable new value"
notes: >
  Is represented with a WriteDeclarationVariableNode node.
  
  Note that as far as the variable is declared in an outer scope
  RubyProcRootNode's attribute frameDescriptor doesn't contain its declaration:
  
    frameDescriptor = FrameDescriptor@...{#0:(self)}
focused_on_node: "org.truffleruby.language.methods.BlockDefinitionNode"
ruby: |
  foo = 100500
  
  proc do
    foo = 42
  end
ast: |
  BlockDefinitionNode
      attributes:
          breakID = org.truffleruby.language.control.BreakID@...
          callTargets = ProcCallTargets(callTargetForProc = block in <top (required)>, callTargetForLambda = null, altCallTargetCompiler = org.truffleruby.parser.MethodTranslator$$Lambda$.../0x...@...)
          frameOnStackMarkerSlot = 3
          sharedMethodInfo = SharedMethodInfo(sourceSection = SourceSection(source=<parse_ast> [3 - 3], index=14, length=7, characters=proc do), staticLexicalScope =  :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = false}, originName = block in <top (required)>, blockDepth = 1, parseName = block in <top (required)>, notes = <top (required)>, argumentDescriptors = [])
          type = PROC
      children:
          readSpecialVariableStorageNode =
              TruffleKernelNodesFactory$GetSpecialVariableStorageNodeGen
      call targets:
          RubyProcRootNode
              attributes:
                  callTarget = block in <top (required)>
                  frameDescriptor = FrameDescriptor@...{#0:(self)}
                  instrumentationBits = 0
                  lock = java.util.concurrent.locks.ReentrantLock@...[Unlocked]
                  nextProfile = false
                  polyglotRef = org.truffleruby.RubyLanguage@...
                  redoProfile = false
                  retryProfile = false
                  returnID = org.truffleruby.language.control.ReturnID@...
                  sharedMethodInfo = SharedMethodInfo(sourceSection = SourceSection(source=<parse_ast> [3 - 3], index=14, length=7, characters=proc do), staticLexicalScope =  :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = false}, originName = block in <top (required)>, blockDepth = 1, parseName = block in <top (required)>, notes = <top (required)>, argumentDescriptors = [])
                  sourceSection = SourceSection(source=<parse_ast> [3 - 3], index=14, length=7, characters=proc do)
                  split = HEURISTIC
              children:
                  body =
                      SequenceNode
                          children:
                              body = [
                                  WriteLocalVariableNode
                                      attributes:
                                          frameSlot = 0
                                      children:
                                          valueNode =
                                              ProfileArgumentNodeGen
                                                  children:
                                                      childNode_ =
                                                          ReadSelfNode
                                  WriteDeclarationVariableNode
                                      attributes:
                                          frameDepth = 1
                                          frameSlot = 2
                                      children:
                                          valueNode =
                                              IntegerFixnumLiteralNode
                                                  attributes:
                                                      value = 42
                              ]