subject: "||="
description: "Variable assignment/constant (A ||= b)"
notes: >
  `A ||= b` is translated into `A || A = b`
  To handle a case when a constant isn't yet defined a DefinedNode is used.
focused_on_node: "org.truffleruby.language.control.OrLazyValueDefinedNode"
ruby: |
  FOO ||= 42
ast: |
  OrLazyValueDefinedNodeGen
      attributes:
          rightTwiceProfile = org.truffleruby.utils.RunTwiceBranchProfile@...
      children:
          left =
              AndNodeGen
                  children:
                      left =
                          DefinedNode
                              children:
                                  child =
                                      ReadConstantWithLexicalScopeNode
                                          attributes:
                                              lexicalScope =  :: Object
                                              name = "FOO"
                                          children:
                                              getConstantNode =
                                                  GetConstantNodeGen
                                              lookupConstantNode =
                                                  LookupConstantWithLexicalScopeNodeGen
                                                      attributes:
                                                          lexicalScope =  :: Object
                                                          name = "FOO"
                      right =
                          ReadConstantWithLexicalScopeNode
                              attributes:
                                  lexicalScope =  :: Object
                                  name = "FOO"
                              children:
                                  getConstantNode =
                                      GetConstantNodeGen
                                  lookupConstantNode =
                                      LookupConstantWithLexicalScopeNodeGen
                                          attributes:
                                              lexicalScope =  :: Object
                                              name = "FOO"
          right =
              WriteConstantNode
                  attributes:
                      name = "FOO"
                  children:
                      moduleNode =
                          LexicalScopeNode
                              attributes:
                                  lexicalScope =  :: Object
                      valueNode =
                          IntegerFixnumLiteralNode
                              attributes:
                                  value = 42