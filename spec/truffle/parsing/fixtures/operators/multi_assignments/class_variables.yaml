subject: "Multi-assignment"
description: "When assigning class variables"
notes: >
  Multi-assigning is represented with MultipleAssignmentNode node.
focused_on_node: "org.truffleruby.core.array.MultipleAssignmentNode"
ruby: |
  @@a, @@b, @@c = 'foo', 'bar', 'baz'
ast: |
  MultipleAssignmentNode
      attributes:
          flags = 1
      children:
          preNodes = [
              WriteClassVariableNode
                  attributes:
                      flags = 0
                      name = "@@a"
                  children:
                      lexicalScopeNode =
                          ObjectLiteralNode
                              attributes:
                                  flags = 0
                                  object =  :: Object
                      resolveTargetModuleNode =
                          ResolveTargetModuleForClassVariablesNodeGen
                      setClassVariableNode =
                          SetClassVariableNodeGen
              WriteClassVariableNode
                  attributes:
                      flags = 0
                      name = "@@b"
                  children:
                      lexicalScopeNode =
                          ObjectLiteralNode
                              attributes:
                                  flags = 0
                                  object =  :: Object
                      resolveTargetModuleNode =
                          ResolveTargetModuleForClassVariablesNodeGen
                      setClassVariableNode =
                          SetClassVariableNodeGen
              WriteClassVariableNode
                  attributes:
                      flags = 0
                      name = "@@c"
                  children:
                      lexicalScopeNode =
                          ObjectLiteralNode
                              attributes:
                                  flags = 0
                                  object =  :: Object
                      resolveTargetModuleNode =
                          ResolveTargetModuleForClassVariablesNodeGen
                      setClassVariableNode =
                          SetClassVariableNodeGen
          ]
          rhsNode =
              ArrayLiteralNode$UninitialisedArrayLiteralNode
                  attributes:
                      flags = 0
                      language = org.truffleruby.RubyLanguage@...
                  children:
                      values = [
                          StringLiteralNode
                              attributes:
                                  encoding = UTF-8
                                  flags = 0
                                  tstring = foo
                          StringLiteralNode
                              attributes:
                                  encoding = UTF-8
                                  flags = 0
                                  tstring = bar
                          StringLiteralNode
                              attributes:
                                  encoding = UTF-8
                                  flags = 0
                                  tstring = baz
                      ]
          splatCastNode =
              SplatCastNodeGen
                  attributes:
                      conversionMethod = :to_ary
                      copy = true
                      flags = 0
                      nilBehavior = ARRAY_WITH_NIL