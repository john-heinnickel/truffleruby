subject: "case expression"
description: "case expression without expression to match and with multiple conditions in a `when` branch (case when a, b ... end)"
notes: >
  A list of conditions in a `when` expression is represented as multiple nested `if` statements
  to evaluate each of conditions.
  
  So the example below is translated to the following expression:
  
    if (true)
      "1st or 2d condition"
    else (false)
      "1st or 2d condition"
    else
      nil
    end
focused_on_node: "org.truffleruby.language.control.IfElseNode"
ruby: |
  case
  when true, false
    "1st or 2d condition"
  end
ast: |
  IfElseNodeGen
      children:
          condition =
              BooleanLiteralNode
                  attributes:
                      value = true
          elseBody =
              IfElseNodeGen
                  children:
                      condition =
                          BooleanLiteralNode
                              attributes:
                                  value = false
                      elseBody =
                          NilLiteralNode
                              attributes:
                                  isImplicit = false
                      thenBody =
                          StringLiteralNode
                              attributes:
                                  encoding = UTF-8
                                  tstring = 1st or 2d condition
          thenBody =
              StringLiteralNode
                  attributes:
                      encoding = UTF-8
                      tstring = 1st or 2d condition