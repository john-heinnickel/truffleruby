subject: "Method call"
description: "Arguments/with splat operator (*args)"
notes: |
  is represented by SplatCastNodeGen node with attributes:
  - `conversionMethod = :to_a`
  - `copy = false`
focused_on_node: "org.truffleruby.language.dispatch.RubyCallNode"
ruby: |
  foo(*bar)
ast: |
  RubyCallNode
      attributes:
          descriptor = org.truffleruby.language.arguments.EmptyArgumentsDescriptor@...
          dispatchConfig = PRIVATE
          emptyKeywordsProfile = false
          isAttrAssign = false
          isSafeNavigation = false
          isSplatted = true
          isVCall = false
          lastArgIsNotHashProfile = false
          methodName = "foo"
          notEmptyKeywordsProfile = false
          notRuby2KeywordsHashProfile = false
          ruby2KeywordsHashProfile = false
      children:
          arguments = [
              SplatCastNodeGen
                  attributes:
                      conversionMethod = :to_a
                      copy = false
                      nilBehavior = CONVERT
                  children:
                      childNode_ =
                          RubyCallNode
                              attributes:
                                  descriptor = org.truffleruby.language.arguments.EmptyArgumentsDescriptor@...
                                  dispatchConfig = PRIVATE
                                  emptyKeywordsProfile = false
                                  isAttrAssign = false
                                  isSafeNavigation = false
                                  isSplatted = false
                                  isVCall = true
                                  lastArgIsNotHashProfile = false
                                  methodName = "bar"
                                  notEmptyKeywordsProfile = false
                                  notRuby2KeywordsHashProfile = false
                                  ruby2KeywordsHashProfile = false
                              children:
                                  receiver =
                                      SelfNode
          ]
          receiver =
              SelfNode