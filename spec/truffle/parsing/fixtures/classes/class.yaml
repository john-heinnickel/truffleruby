subject: "class"
description: "class definition"
notes: >
  A class definition is represented as a RunModuleDefinitionNode node,
  that is used for both classes and modules definition,
  and with specific for a class a child DefineClassNode node.
  
  A class body is represented as a CallTarget, (that will be used to create an internal method),
  stored in ModuleBodyDefinition.
  
  Expressions inside a class body are represented by InsideModuleDefinitionNode node.
focused_on_node: "org.truffleruby.language.objects.RunModuleDefinitionNode"
ruby: |
  class Foo
  end
ast: |
  RunModuleDefinitionNode
      attributes:
          moduleBodyDefinition = ModuleBodyDefinition(name = <class:Foo>, sharedMethodInfo = SharedMethodInfo(sourceSection = SourceSection(source=<parse_ast> [1 - 2], index=0, length=13, characters=class Foo\nend), staticLexicalScope =  :: null :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = false}, originName = <class:Foo>, blockDepth = 0, parseName = <class:Foo>, notes = null, argumentDescriptors = null), callTarget = <class:Foo>, staticLexicalScope =  :: null :: Object, dynamicLexicalScopes = null)
      children:
          callModuleDefinitionNode =
              DefaultIndirectCallNode
          definingModule =
              DefineClassNode
                  attributes:
                      name = "Foo"
                  children:
                      lexicalParentModule =
                          LexicalScopeNode
                              attributes:
                                  lexicalScope =  :: Object
      call targets:
          RubyRootNode
              attributes:
                  callTarget = <class:Foo>
                  frameDescriptor = FrameDescriptor@...{#0:(self), #1:%$~_}
                  instrumentationBits = 0
                  lock = java.util.concurrent.locks.ReentrantLock@...[Unlocked]
                  polyglotRef = org.truffleruby.RubyLanguage@...
                  returnID = org.truffleruby.language.control.ReturnID@...
                  sharedMethodInfo = SharedMethodInfo(sourceSection = SourceSection(source=<parse_ast> [1 - 2], index=0, length=13, characters=class Foo\nend), staticLexicalScope =  :: null :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = false}, originName = <class:Foo>, blockDepth = 0, parseName = <class:Foo>, notes = null, argumentDescriptors = null)
                  sourceSection = SourceSection(source=<parse_ast> [1 - 2], index=0, length=13, characters=class Foo\nend)
                  split = NEVER
              children:
                  body =
                      SequenceNode
                          children:
                              body = [
                                  WriteLocalVariableNode
                                      attributes:
                                          frameSlot = 0
                                      children:
                                          valueNode =
                                              ProfileArgumentNodeGen
                                                  children:
                                                      childNode_ =
                                                          ReadSelfNode
                                  InsideModuleDefinitionNode
                                      children:
                                          body =
                                              NilLiteralNode
                                                  attributes:
                                                      isImplicit = false
                              ]