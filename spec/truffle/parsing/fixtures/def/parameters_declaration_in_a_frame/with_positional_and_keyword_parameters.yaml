subject: "Def"
description: "Parameters declaration in a frame / with all kinds of positional and keyword parameters"
notes: >
  Parameters are declared in a RubyMethodRootNode's attribute frameDescriptor:
    frameDescriptor = FrameDescriptor@...{#0:(self), #1:%$~_, #2:a, #3:b, #4:c, #5:f, #6:%method_block_arg, #7:d, #8:e}
  
  So there are the following slots:
  - 0 self
  - 1 %$~_ - special variable
  - 2-5, 7-8 - parameters a-f
  - 6 %method_block_arg - a variable that is used by the yield operator

focused_on_node: "org.truffleruby.language.methods.LiteralMethodDefinitionNode"
ruby: |
  def foo(a, b = 42, *c, d:, e: 100500, **f)
  end
ast: |
  LiteralMethodDefinitionNode
      attributes:
          callTargetSupplier = org.truffleruby.language.methods.CachedLazyCallTargetSupplier@...
          isDefSingleton = false
          name = "foo"
          sharedMethodInfo = SharedMethodInfo(sourceSection = SourceSection(source=<parse_ast> [1 - 2], index=0, length=46, characters=def foo(a, b = 42, *c, d:, e: 100500, **f)\nend), staticLexicalScope =  :: Object, arity = Arity{preRequired = 1, optional = 1, hasRest = true, postRequired = 0, keywordArguments = [d, e], requiredKeywordArgumentsCount = 1, hasKeywordsRest = true}, originName = foo, blockDepth = 0, parseName = Object#foo, notes = null, argumentDescriptors = [ArgumentDescriptor(name = a, type = req), ArgumentDescriptor(name = b, type = opt), ArgumentDescriptor(name = c, type = rest), ArgumentDescriptor(name = d, type = keyreq), ArgumentDescriptor(name = e, type = key), ArgumentDescriptor(name = f, type = keyrest)])
      call targets:
          RubyMethodRootNode
              attributes:
                  arityForCheck = Arity{preRequired = 1, optional = 1, hasRest = true, postRequired = 0, keywordArguments = [d, e], requiredKeywordArgumentsCount = 1, hasKeywordsRest = true}
                  callTarget = Object#foo
                  checkArityProfile = false
                  frameDescriptor = FrameDescriptor@...{#0:(self), #1:%$~_, #2:a, #3:b, #4:c, #5:f, #6:%method_block_arg, #7:d, #8:e}
                  instrumentationBits = 0
                  keywordArguments = true
                  localReturnProfile = false
                  lock = java.util.concurrent.locks.ReentrantLock@...[Unlocked]
                  matchingReturnProfile = false
                  nonMatchingReturnProfile = false
                  polyglotRef = org.truffleruby.RubyLanguage@...
                  retryProfile = false
                  returnID = org.truffleruby.language.control.ReturnID@...
                  sharedMethodInfo = SharedMethodInfo(sourceSection = SourceSection(source=<parse_ast> [1 - 2], index=0, length=46, characters=def foo(a, b = 42, *c, d:, e: 100500, **f)\nend), staticLexicalScope =  :: Object, arity = Arity{preRequired = 1, optional = 1, hasRest = true, postRequired = 0, keywordArguments = [d, e], requiredKeywordArgumentsCount = 1, hasKeywordsRest = true}, originName = foo, blockDepth = 0, parseName = Object#foo, notes = null, argumentDescriptors = [ArgumentDescriptor(name = a, type = req), ArgumentDescriptor(name = b, type = opt), ArgumentDescriptor(name = c, type = rest), ArgumentDescriptor(name = d, type = keyreq), ArgumentDescriptor(name = e, type = key), ArgumentDescriptor(name = f, type = keyrest)])
                  sourceSection = SourceSection(source=<parse_ast> [1 - 2], index=0, length=46, characters=def foo(a, b = 42, *c, d:, e: 100500, **f)\nend)
                  split = HEURISTIC
              children:
                  body =
                      SequenceNode
                          children:
                              body = [
                                  WriteLocalVariableNode
                                      attributes:
                                          frameSlot = 0
                                      children:
                                          valueNode =
                                              ProfileArgumentNodeGen
                                                  children:
                                                      childNode_ =
                                                          ReadSelfNode
                                  WriteLocalVariableNode
                                      attributes:
                                          frameSlot = 2
                                      children:
                                          valueNode =
                                              ProfileArgumentNodeGen
                                                  children:
                                                      childNode_ =
                                                          ReadPreArgumentNode
                                                              attributes:
                                                                  index = 0
                                                                  keywordArguments = true
                                                                  missingArgumentBehavior = RUNTIME_ERROR
                                  SaveMethodBlockNode
                                      attributes:
                                          slot = 6
                                  WriteLocalVariableNode
                                      attributes:
                                          frameSlot = 3
                                      children:
                                          valueNode =
                                              ReadOptionalArgumentNode
                                                  attributes:
                                                      index = 1
                                                      keywordArguments = true
                                                      minimum = 2
                                                  children:
                                                      defaultValue =
                                                          IntegerFixnumLiteralNode
                                                              attributes:
                                                                  value = 42
                                  WriteLocalVariableNode
                                      attributes:
                                          frameSlot = 4
                                      children:
                                          valueNode =
                                              ReadRestArgumentNode
                                                  attributes:
                                                      keywordArguments = true
                                                      markKeywordHashWithFlag = false
                                                      postArgumentsCount = 0
                                                      startIndex = 2
                                  WriteLocalVariableNode
                                      attributes:
                                          frameSlot = 7
                                      children:
                                          valueNode =
                                              ReadKeywordArgumentNodeGen
                                                  attributes:
                                                      name = :d
                                                  children:
                                                      readUserKeywordsHashNode =
                                                          ReadUserKeywordsHashNode
                                  WriteLocalVariableNode
                                      attributes:
                                          frameSlot = 8
                                      children:
                                          valueNode =
                                              ReadKeywordArgumentNodeGen
                                                  attributes:
                                                      name = :e
                                                  children:
                                                      defaultValue =
                                                          IntegerFixnumLiteralNode
                                                              attributes:
                                                                  value = 100500
                                                      readUserKeywordsHashNode =
                                                          ReadUserKeywordsHashNode
                                  WriteLocalVariableNode
                                      attributes:
                                          frameSlot = 5
                                      children:
                                          valueNode =
                                              ReadKeywordRestArgumentNode
                                                  attributes:
                                                      excludedKeywords = [:d, :e]
                                                  children:
                                                      hashes =
                                                          HashStoreLibraryGen$CachedDispatchFirst
                                                              attributes:
                                                                  limit_ = 3
                                                      readUserKeywordsHashNode =
                                                          ReadUserKeywordsHashNode
                                  NilLiteralNode
                                      attributes:
                                          isImplicit = false
                              ]